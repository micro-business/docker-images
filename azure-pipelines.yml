trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - main
      - release/*
      - feature/*
      - hotfix/*
  paths:
    exclude:
      - README.md

variables:
  - template: variables.yml

resources:
  repositories:
    - repository: templates
      type: github
      name: micro-business/templates
      endpoint: micro-business

name: $(GitVersion.SemVer)

stages:
  - stage: Build
    jobs:
      - job: Build_Protobuf
        pool:
          vmImage: ${{ variables.linuxVmImage }}
        steps:
          - template: build/build-push-docker-image.yml@templates
            parameters:
              version: ${{ variables.artifactVersion }}
              dockerContainerRegistry: ${{ variables.dockerContainerRegistry }}
              dockerRepositoryName: ${{ variables.protobufDockerRepositoryName }}
              dockerFilePath: ${{ variables.protobufDockerFilePath }}
              dockerBuildContext: "$(system.defaultWorkingDirectory)"

      - job: Build_K8S_Toolset_Image
        pool:
          vmImage: ${{ variables.linuxVmImage }}
        steps:
          - template: build/build-push-docker-image.yml@templates
            parameters:
              version: ${{ variables.artifactVersion }}
              dockerContainerRegistry: ${{ variables.dockerContainerRegistry }}
              dockerRepositoryName: ${{ variables.k8sToolsetDockerRepositoryName }}
              dockerFilePath: ${{ variables.k8sToolsetDockerFilePath }}
              dockerBuildContext: "$(system.defaultWorkingDirectory)"

      - job: Build_Firebase_Toolset_Image
        pool:
          vmImage: ${{ variables.linuxVmImage }}
        steps:
          - template: build/build-push-docker-image.yml@templates
            parameters:
              version: ${{ variables.artifactVersion }}
              dockerContainerRegistry: ${{ variables.dockerContainerRegistry }}
              dockerRepositoryName: ${{ variables.firebaseToolsetDockerRepositoryName }}
              dockerFilePath: ${{ variables.firebaseToolsetDockerFilePath }}
              dockerBuildContext: "$(system.defaultWorkingDirectory)"
